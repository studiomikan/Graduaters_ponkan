#=========================================================================================
# 確認ダイアログ
#
# 「設定」の部分で使用するレイヤー、背景画像等を設定して使用してください。
#
# ダイアログの表示方法：
#   - 呼び出す前に tv.system.dialogMessage に表示したいメッセージを格納する。
#   - ;call file: "script/confirm_dialog.pon" で呼び出す
#   - クリック結果は tv.system.dialogResult に入っている。
#     - 「はい」が true、「いいえ」が false
#=========================================================================================
*show_dialog
;rclick enabled: false

#==========================================
# ▼▼ 設定 ここから ▼▼
#==========================================
---
if (tv.system == null) tv.system = {};
tv.system.dialog = {
  // ダイアログを表示するレイヤー
  lay: 39,

  // テキストを表示する位置の設定
  text: {
    centerX: 1280/2,
    centerY: 310
  },

  // 背景の設定
  bg: {
    // 背景に使用する画像
    file: "dialog/dialog.png",
    // 背景画像のサイズ
    width: 1280,
    height: 720
  },

  // YESボタンの設定
  yes: {
    // ボタン画像
    file: "dialog/dialog_yes.png",
    // ボタンの位置
    x: 1280/2-200-15,
    y: 380
  },

  // NOボタンの位置
  no: {
    // ボタン画像
    file: "dialog/dialog_no.png",
    // ボタンの位置
    x: 1280/2+15,
    y: 380
  },
}
---
#==========================================
# ▲▲ 設定 ここまで ▲▲
#==========================================

;lockbuttons lay: "all", page: "fore"
;clear lay: "&tv.system.dialog.lay"
;clearbuttons lay: "&tv.system.dialog.lay"

;image {
  lay:      "&tv.system.dialog.lay",
  file:     "&tv.system.dialog.bg.file",
  x:        "&(ponkan.config.width - tv.system.dialog.bg.width) / 2",
  y:        "&(ponkan.config.height - tv.system.dialog.bg.height) / 2",
}
;imagebutton {
  lay:       "&tv.system.dialog.lay",
  imagefile: "&tv.system.dialog.yes.file",
  x:         "&tv.system.dialog.yes.x",
  y:         "&tv.system.dialog.yes.y",
  onclick:   "tv.system.dialogResult = true",
  jump:     true,
  label:    "dialog_return",
}
;imagebutton {
  lay:       "&tv.system.dialog.lay",
  imagefile: "&tv.system.dialog.no.file",
  x:         "&tv.system.dialog.no.x",
  y:         "&tv.system.dialog.no.y",
  onclick:   "tv.system.dialogResult = false",
  jump:     true,
  label:    "dialog_return",
}

;nowait
;mesopt {
  lay:      "&tv.system.dialog.lay",
  color:    0x000000,
  align:    "center",
  fontsize: 26
}
;locate lay: "&tv.system.dialog.lay", x: "&tv.system.dialog.text.centerX", y: "&tv.system.dialog.text.centerY"
;ch lay: "&tv.system.dialog.lay", text: "&tv.system.dialogMessage"
;endnowait
;layopt lay: "&tv.system.dialog.lay", visible: true, alpha: 0
;move lay: "&tv.system.dialog.lay", time: 200, path: [{ alpha: 1 }]
;waitmove lay: "&tv.system.dialog.lay", canskip: false
;unlockbuttons lay: "&tv.system.dialog.lay"
;s

*dialog_return
;lockbuttons lay: "&tv.system.dialog.lay"
;move lay: "&tv.system.dialog.lay", time: 200, path: [{ alpha: 0 }]
;waitmove lay: "&tv.system.dialog.lay", canskip: false
;layopt lay: "&tv.system.dialog.lay", visible: false
-tv.system.dialogMessage = "";
;rclick enabled: true
;return

