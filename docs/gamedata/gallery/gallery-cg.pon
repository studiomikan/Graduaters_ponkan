# 背景
- tv.gallery.currentTab = "cg";
;pretrans
;call file: "gallery/gallery-sound.pon", label: "stop_sound"
;call file: "gallery/gallery.pon", label: "hide_layers"
;call file: "gallery/gallery.pon", label: "draw_bg"
;call file: "gallery/gallery.pon", label: "draw_header"

---
tv.gallery.cg = tv.cg = {
  lay: {
    bg: 28,
    asuka: 29,
    yuuki: 30,
    window: 31,
    note: 32,
  },
  bg: null,
  chara: {
    asuka: {
      num: null,
      size: null,
      pos: null,
    },
    yuuki: {
      num: null,
      size: null,
      pos: null,
    },
  },
  btns: [
    // CG
    { text: "黒単色",     btnName: "黒単色",     label: "on_click_bg", x: 35,       y: 42,    width: 70,  file: "image/bg-black.png", note: "背景画像を変更します。" },
    { text: "白単色",     btnName: "白単色",     label: "on_click_bg", x: 35+80,    y: 42,    width: 70,  file: "image/bg-white.png", note: "背景画像を変更します。" },
    { text: "廊下",       btnName: "廊下",       label: "on_click_bg", x: 35,       y: 42+32, width: 50,  file: "image/bg-hall.png",  note: "背景画像を変更します。" },
    { text: "教室",       btnName: "教室",       label: "on_click_bg", x: 35+60*1,  y: 42+32, width: 50,  file: "image/bg-class.png", note: "背景画像を変更します。" },
    { text: "屋上",       btnName: "屋上",       label: "on_click_bg", x: 35+60*2,  y: 42+32, width: 50,  file: "image/bg-roof.png",  note: "背景画像を変更します。" },
    { text: "夜空",       btnName: "夜空",       label: "on_click_bg", x: 35+60*3,  y: 42+32, width: 50,  file: "image/bg-moon.png",  note: "背景画像を変更します。" },
    { text: "貯水タンク", btnName: "貯水タンク", label: "on_click_bg", x: 35,       y: 42+64, width: 110, file: "image/bg-tank.png",  note: "背景画像を変更します。" },
    // 明日香
    { text: "１", btnName: "asuka_１", label: "on_click_chara", x: 105+40*0, y: 202,    width: 30, name: "asuka", num: 1,         note: "明日香の表情差分を変更します。" },
    { text: "２", btnName: "asuka_２", label: "on_click_chara", x: 105+40*1, y: 202,    width: 30, name: "asuka", num: 2,         note: "明日香の表情差分を変更します。" },
    { text: "３", btnName: "asuka_３", label: "on_click_chara", x: 105+40*2, y: 202,    width: 30, name: "asuka", num: 3,         note: "明日香の表情差分を変更します。" },
    { text: "４", btnName: "asuka_４", label: "on_click_chara", x: 105+40*3, y: 202,    width: 30, name: "asuka", num: 4,         note: "明日香の表情差分を変更します。" },
    { text: "５", btnName: "asuka_５", label: "on_click_chara", x: 105+40*4, y: 202,    width: 30, name: "asuka", num: 5,         note: "明日香の表情差分を変更します。" },
    { text: "近", btnName: "asuka_近", label: "on_click_chara", x: 105+40*0, y: 202+32, width: 30, name: "asuka", size: "large",  note: "明日香の距離を変更します。" },
    { text: "遠", btnName: "asuka_遠", label: "on_click_chara", x: 105+40*1, y: 202+32, width: 30, name: "asuka", size: "medium", note: "明日香の距離を変更します。" },
    { text: "左", btnName: "asuka_左", label: "on_click_chara", x: 105+40*0, y: 202+64, width: 30, name: "asuka", pos: "left",    note: "明日香の表示位置を変更します。" },
    { text: "中", btnName: "asuka_中", label: "on_click_chara", x: 105+40*1, y: 202+64, width: 30, name: "asuka", pos: "center",  note: "明日香の表示位置を変更します。" },
    { text: "右", btnName: "asuka_右", label: "on_click_chara", x: 105+40*2, y: 202+64, width: 30, name: "asuka", pos: "right",   note: "明日香の表示位置を変更します。" },
    // 優希
    { text: "１", btnName: "yuuki_１", label: "on_click_chara", x: 105+40*0, y: 362,    width: 30, name: "yuuki", num: 1,         note: "優希の表情差分を変更します。" },
    { text: "２", btnName: "yuuki_２", label: "on_click_chara", x: 105+40*1, y: 362,    width: 30, name: "yuuki", num: 2,         note: "優希の表情差分を変更します。" },
    { text: "３", btnName: "yuuki_３", label: "on_click_chara", x: 105+40*2, y: 362,    width: 30, name: "yuuki", num: 3,         note: "優希の表情差分を変更します。" },
    { text: "４", btnName: "yuuki_４", label: "on_click_chara", x: 105+40*3, y: 362,    width: 30, name: "yuuki", num: 4,         note: "優希の表情差分を変更します。" },
    { text: "５", btnName: "yuuki_５", label: "on_click_chara", x: 105+40*4, y: 362,    width: 30, name: "yuuki", num: 5,         note: "優希の表情差分を変更します。" },
    { text: "近", btnName: "yuuki_近", label: "on_click_chara", x: 105+40*0, y: 362+32, width: 30, name: "yuuki", size: "large",  note: "優希の距離を変更します。" },
    { text: "遠", btnName: "yuuki_遠", label: "on_click_chara", x: 105+40*1, y: 362+32, width: 30, name: "yuuki", size: "medium", note: "優希の距離を変更します。" },
    { text: "左", btnName: "yuuki_左", label: "on_click_chara", x: 105+40*0, y: 362+64, width: 30, name: "yuuki", pos: "left",    note: "優希の表示位置を変更します。" },
    { text: "中", btnName: "yuuki_中", label: "on_click_chara", x: 105+40*1, y: 362+64, width: 30, name: "yuuki", pos: "center",  note: "優希の表示位置を変更します。" },
    { text: "右", btnName: "yuuki_右", label: "on_click_chara", x: 105+40*2, y: 362+64, width: 30, name: "yuuki", pos: "right",   note: "優希の表示位置を変更します。" },
  ],
}
tv.originalMesLayNum = ponkan.messageLayerNum;
tv.onMouseEnter = function(btnName) {
  // console.log("onMouseEnter");
  var btn = tv.cg.btns.filter((btn) => btn.btnName == btnName)[0];
  var lay = ponkan.foreLayers[tv.cg.lay.note];
  lay.clearText();
  lay.addText(btn.note);
};
tv.onMouseLeave = function() {
  // console.log("onMouseLeave");
  var lay = ponkan.foreLayers[tv.cg.lay.note];
  lay.clearText();
}
---

;rclick jump: false, call: false, enabled: false

;freeimage lay: "&tv.cg.lay.bg"
;layopt lay: "&tv.cg.lay.bg", visible: false
;image lay: "&tv.cg.lay.window", file: "gallery/cg/window.png", x: 0, y: 115, visible: true
;layopt lay: "&tv.cg.lay.window", autohide: true
;meslay lay: "&tv.cg.lay.window"
;messageopt {
  lay: "&tv.cg.lay.window",
  fontfamily: ["GenShinGothic", "monospace"],
  fontsize: 20,
  weight: "normal",
  color: "0xFFFFFF",
  pitch: 0,
  lineheight: 20,
  linepitch: 12,
  align: "left",
  shadow: false,
  edgewidth: 0,
  autoreturn: false,
  margint: 15,
  marginr: 0,
  marginb: 0,
  marginl: 20
}
;clear
;nowait
◆ 背景$
$
$
$
$
◆ 明日香$
　表情：$
　距離：$
　位置：$
$
◆ 優希$
　表情：$
　距離：$
　位置：$
;endnowait

;layopt lay: "&tv.cg.lay.note", x: 20, y: 619, width: 400, height: 30, visible: true
;messageopt {
  lay: "&tv.cg.lay.note",
  fontfamily: ["GenShinGothic", "monospace"],
  fontsize: 18,
  weight: "normal",
  color: "0xFFFFFF",
  pitch: 0,
  lineheight: 18,
  linepitch: 12,
  align: "left",
  shadow: false, edgewidth: 0,
  autoreturn: false,
  margint: 0, marginr: 0, marginb: 0, marginl: 0
}
;clear lay: "&tv.cg.lay.note"
;messagelay "lay": "&tv.originalMesLayNum"

*draw_buttons
;for loops: "&tv.cg.btns.length", indexvar: "i"
  ---
  tv.btn = tv.cg.btns[tv.i];
  tv.onclick = `tv.clickedButton = tv.cg.btns[${tv.i}];`;
  tv.onenter = `tv.onMouseEnter("${tv.btn.btnName}")`;
  tv.onleave = `tv.onMouseLeave()`;
  ---
  ;textbutton {
    lay:      "&tv.cg.lay.window",
    text:     "&tv.btn.text",
    btnname:  "&tv.btn.btnName",
    x:        "&tv.btn.x",
    y:        "&tv.btn.y",
    width:    "&tv.btn.width",
    height:   30,
    bgcolors: ["0xFFFFFF", "0xFFFFFF", "0xFFFFFF"],
    bgalphas: [0.0, 0.2, 0.3],
    onclick:  "&tv.onclick",
    onenter:  "&tv.onenter",
    onleave:  "&tv.onleave",
    jump:     true,
    label:    "&tv.btn.label",
    margint:  5,
  }
;endfor

*trans
;trans time: 200
;waittrans canskip: false

*unlockbuttons
;unlockbuttons
;rclick jump: true, call: false, label: "on_rclick", enabled: true
;s


# 立ち絵の変更
*on_click_chara
---
var clicked = tv.clickedButton;
var name = tv.clickedButton.name;
var size = tv.clickedButton.size;
var num = tv.clickedButton.num;
var pos = tv.clickedButton.pos;
var chara = tv.cg.chara[name];
// 選択済みのボタンを押下したときは、選択を解除する。
var unselect =
  (size != null && size == chara.size) ||
  (num != null && num == chara.num) ||
  (pos != null && pos == chara.pos);
var oldBtnName = null;
if (unselect) {
  if (size != null) chara.size = null;
  if (num != null) chara.num = null;
  if (pos != null) chara.pos = null;
} else {
  // 選択が変更されたときは、それ以外のボタンの選択を解除する。
  var getOldBtnName = function(key) {
    var btns = tv.cg.btns.filter((btn) => btn.name == name && btn[key] == chara[key])
    if (btns.length > 0) return btns[0].btnName;
    else return null;
  }
  if (size != null && chara.size != null) oldBtnName = getOldBtnName("size");
  if (num != null && chara.num != null)   oldBtnName = getOldBtnName("num");
  if (pos != null && chara.pos != null)   oldBtnName = getOldBtnName("pos");
  // 立ち絵の状態を更新
  if (size != null) chara.size = size;
  if (num != null) chara.num = num;
  if (pos != null) chara.pos = pos;
}

tv.visible = chara.size != null && chara.num != null && chara.pos != null;
tv.name = name;
tv.gchara = chara;
tv.unselect = unselect;
tv.oldBtnName = oldBtnName;
---
;pretrans

;if exp: "tv.unselect"
  # 選択済みのボタンが押下されたので、選択解除する
  ;textbuttonopt lay: "&tv.cg.lay.window", btnname: "&tv.clickedButton.btnName", bgalphas: [0.0, 0.2, 0.3]
;else
  # 別のボタンに変更する
  # 古い選択を解除する
  ;if exp: "tv.oldBtnName"
    ;textbuttonopt lay: "&tv.cg.lay.window", btnname: "&tv.oldBtnName", bgalphas: [0.0, 0.2, 0.3]
  ;endif
  # クリックされたボタンを選択状態にする
  ;textbuttonopt lay: "&tv.cg.lay.window", btnname: "&tv.clickedButton.btnName", bgalphas: [0.3, 0.3, 0.3]
;endif

# キャラクターの更新
;if exp: "tv.visible"
  ;load_chara_for_gallery name: "&tv.name", size: "&tv.gchara.size", num: "&tv.gchara.num", pos: "&tv.gchara.pos"
;else
  ;layopt lay: "&tv.cg.lay[tv.name]", visible: false
;endif

;flip
;jump label: "unlockbuttons"


# 背景変更
*on_click_bg
;lockbuttons
---
tv.oldBtnName = tv.cg.bg != null ? tv.cg.bg.btnName : null;
tv.newBtnName = tv.clickedButton.btnName;
tv.cg.bg = tv.clickedButton;
---
;pretrans
# とりあえず選択中のボタンの色を戻す
;if exp: "tv.oldBtnName != null"
  ;textbuttonopt lay: "&tv.cg.lay.window", btnname: "&tv.oldBtnName", bgalphas: [0.0, 0.2, 0.3]
;endif
;if exp: "tv.oldBtnName == tv.newBtnName"
  # 同じ画像が選択された -> 選択解除
  - tv.cg.bg = null;
  ;layopt lay: "&tv.cg.lay.bg", visible: false
;else
  # 違う画像が選択された
  - tv.cg.bg = tv.clickedButton;
  ;image lay: "&tv.cg.lay.bg", file: "&tv.cg.bg.file", x: 0, y: 0, visible: true
  ;textbuttonopt lay: "&tv.cg.lay.window", btnname: "&tv.newBtnName", bgalphas: [0.3, 0.3, 0.3]
;endif
;flip
;jump label: "unlockbuttons"

# ウィンドウ表示・非表示
*on_rclick
;lockbuttons
;layopt lay: "&tv.gallery.lay.header", visible: false
;layopt lay: "&tv.cg.lay.window", visible: false
;layopt lay: "&tv.cg.lay.note", visible: false
;rclick jump: true, call: false, label: "on_rclick_exit", enabled: true
;waitclick
*on_rclick_exit
- ponkan.conductor.clearAllEventHandler();
;layopt lay: "&tv.gallery.lay.header", visible: true
;layopt lay: "&tv.cg.lay.window", visible: true
;layopt lay: "&tv.cg.lay.note", visible: true
;jump label: "unlockbuttons"
