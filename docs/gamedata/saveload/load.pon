#=========================================================================================
# ロード画面
#
# 「設定」の部分で使用するレイヤー、背景画像等を設定して使用してください。
#=========================================================================================
*load_start

#==========================================
# ▼▼ 設定 ここから ▼▼
#==========================================
---
if (tv.system == null) tv.system = {};
tv.system.load = {
  // 背景画像
  bg: "saveload/load.png",

  // 背景用レイヤー
  baseLay: 26,

  // ボタン表示用レイヤー
  btnLay: 27,

  // テキスト表示用レイヤー
  textLay: 28,

  // トランジションの時間
  transTime: 200,
};
---
#==========================================
# ▲▲ 設定 ここまで ▲▲
#==========================================

;tempsave num: 0
;historyopt enabled: false
;rclick enabled: false
;backlay

---
// [内部処理用] ロード番号
tv.system.load.loadPageNum = 0;
tv.system.load.fadeinTime = tv.system.load.transTime;
tv.system.load.fadeoutTime = tv.system.load.transTime;
---

#==========================================
# 描画処理
#==========================================
*draw

;currentpage page: "back"

# 背景の設定
;image {
  lay: "&tv.system.load.baseLay",
  file: "&tv.system.load.bg",
  visible: false,
  x: 0,
  y: 0
}
;layopt lay: "&tv.system.load.baseLay", visible: true

# ボタン用レイヤの設定
;layopt lay: "&tv.system.load.btnLay", x: 0, y: 0, width: 1280, height: 720, visible: true
;mesopt lay: "&tv.system.load.btnLay", color: 0x000000
;clear lay: "&tv.system.load.btnLay"
;clearbuttons lay: "&tv.system.load.btnLay"

# テキスト用レイヤの設定
;layopt lay: "&tv.system.load.textLay", x:0, y: 0, width: 1280, height: 720, visible: true
;meslay lay: "&tv.system.load.textLay"
;clear lay: "&tv.system.load.textLay"
;mesopt {
  fontfamily: ["GenShinGothic", "monospace"],
  fontsize: 18,
  lineheight: 18,
  align: "left",
  color: 0x000000,
  autoreturn: false,
  margint: 0, marginr: 0, marginb: 0, marginl: 0
}

# ボタンをロック
;lockbuttons page: "fore"
;lockbuttons page: "back"
# システムボタンをロック
;locksystembuttons page: "fore"
;locksystembuttons page: "back"

# ロードボタンの設置
;nowait
;for loops: 6, indexvar: "i"
  ---
  tv.pos = [
    [60, 140], [670, 140],
    [60, 315], [670, 315],
    [60, 490], [670, 490],
  ];
  tv.x = tv.pos[tv.i][0];
  tv.y = tv.pos[tv.i][1];
  tv.loadNum = (tv.system.load.loadPageNum * 6) + tv.i;
  tv.loadInfo = ponkan.getSaveDataInfo(tv.loadNum);
  tv.text = tv.loadInfo.text.replace(/\n/, "");
  if (tv.text.length > 42) {
    tv.text = tv.text.substring(0, 42) + "...";
  }
  tv.lineList = ponkan.splitStrByLength(tv.text, 15);
  if (tv.lineList[0] == null) { tv.lineList[0] = ""; }
  if (tv.lineList[1] == null) { tv.lineList[1] = ""; }
  if (tv.lineList[2] == null) { tv.lineList[2] = ""; }
  tv.exp = "tv.clickedloadNum = " + tv.loadNum + ";";
  tv.deleteExp = "tv.clickedDeleteNum = " + tv.loadNum + ";";
  ---
    ;if exp: "ponkan.existSaveData(tv.loadNum)"
    ;textbutton {
      lay:    "&tv.system.load.btnLay",
      text:   "",
      x:      "&tv.x",
      y:      "&tv.y",
      width:  550,
      height: 150,
      bgcolors: ["0xFFFFFF", "0xFFFFFF", "0xFFFFFF"],
      bgalphas: [0.75, 0.85, 0.9],
      exp:    "&tv.exp",
      jump:   true,
      label:  "on_click_load_button"
    }
  ;else
    ;textbutton {
      lay:    "&tv.system.load.btnLay",
      text:   "",
      x:      "&tv.x",
      y:      "&tv.y",
      width:  550,
      height: 150,
      bgcolors: ["0xFFFFFF", "0xFFFFFF", "0xFFFFFF"],
      bgalphas: [0.75, 0.75, 0.75],
      jump:   true,
      label:  "unlock_load_buttons"
    }
  ;endif
  ;childimage {
    lay:  "&tv.system.load.btnLay",
    file: "&tv.loadInfo.screenShot",
    x:    "&tv.x + 10",
    y:    "&tv.y + 10",
    alpha: 1
  }
  ;mesopt fontsize: 14, lineheight: 14, color: 0x000000
  ;locate x: "&tv.x + 251", y: "&tv.y + 10"
  = "No." + (tv.loadNum + 1)
  ;locate x: "&tv.x + 251 + 50", y: "&tv.y + 10"
  = tv.loadInfo.date
  ;mesopt fontsize: 16, lineheight: 16, color: 0x000000
  ;locate x: "&tv.x + 251", y: "&tv.y + 44"
  = tv.loadInfo.comment
  ;locate x: "&tv.x + 251", y: "&tv.y + 78"
  = tv.lineList[0]
  ;locate x: "&tv.x + 251", y: "&tv.y + 78 + 22"
  = tv.lineList[1]
  ;locate x: "&tv.x + 251", y: "&tv.y + 78 + 22 + 22"
  = tv.lineList[2]
  ;if exp: "ponkan.existSaveData(tv.loadNum)"
    ;imagebutton {
      lay:       "&tv.system.load.btnLay",
      imagefile: "saveload/close_button_small.png",
      x:         "&tv.x + (550 - 25)",
      y:         "&tv.y + 10",
      exp:       "&tv.deleteExp",
      jump:      true,
      label:     "on_click_delete_button"
    }
  ;endif
;endfor
;endnowait

# ページ送りボタン
---
tv.pageButtonX = 700;
tv.pageButtonY = 20;
---
;mesopt {
  fontsize: 24, lineheight: 24, color: 0xFFFFFF,
  margint: 0, marginr: 0, marginb: 0, marginl: 0
}
;locate x: "&tv.pageButtonX", y: "&tv.pageButtonY"
;nowait
PAGE:
;for loops: 10, indexvar: "i"
  ---
  tv.x = tv.pageButtonX + 80 + (tv.i * 40);
  tv.y = tv.pageButtonY;
  tv.exp = "tv.clickedPageNum = " + tv.i + ";";
  if (tv.i == tv.system.load.loadPageNum) {
    tv.bgalphas = [1, 1, 1];
  } else {
    tv.bgalphas = [0.50, 0.85, 0.9];
  }
  ---
  ;textbutton {
    lay:    "&tv.system.load.btnLay",
    text:   "&'' + (tv.i + 1)",
    x:      "&tv.x",
    y:      "&tv.y",
    width:  30,
    height: 30,
    bgcolors: ["0xFFFFFF", "0xFFFFFF", "0xFFFFFF"],
    bgalphas: "&tv.bgalphas",
    exp:    "&tv.exp",
    jump:   true,
    label:  "on_click_page_button"
  }
;endfor
;endnowait

# ロード画面の閉じるボタン
;imagebutton {
  lay:       "&tv.system.load.btnLay",
  imagefile: "saveload/close_button.png",
  x:         "&1280 - 30 - 24",
  y:         23,
  jump:      true,
  label:     "exit"
}


# トランジションで表示
;trans method: "crossfade", time: "&tv.system.load.fadeinTime"
;waittrans canskip: false

*unlock_load_buttons
# ロードのボタンのロックを解除
;unlockbuttons lay: "&tv.system.load.btnLay"
# 右クリックで画面を終了
;rclick jump: true, label: "exit", enabled: true
;s



#==========================================
# ページ切り替え
#==========================================
*on_click_page_button
-tv.system.load.fadeinTime = 100;
;if exp: "tv.system.load.loadPageNum == tv.clickedPageNum"
  ;jump label: "unlock_load_buttons"
;else
  -tv.system.load.loadPageNum = tv.clickedPageNum;
  ;jump label: "draw"
;end
;s


#==========================================
# ロードする
#==========================================
*on_click_load_button
-tv.system.dialogMessage = "No." + (tv.clickedloadNum + 1) + " をロードしますか？";
;call file: "dialog/confirm_dialog.pon", label: "show_dialog"
;if exp: "tv.system.dialogResult"
  ;load num: "&tv.clickedloadNum"
  -tv.system.load.fadeinTime = 100;
  ;jump label: "draw"
;else
  ;jump label: "unlock_load_buttons"
;end
;s


#==========================================
# 削除する
#==========================================
*on_click_delete_button
-tv.system.dialogMessage = "No." + (tv.clickedDeleteNum + 1) + " のデータを削除しますか？";
;call file: "dialog/confirm_dialog.pon", label: "show_dialog"
;if exp: "tv.system.dialogResult"
  ;deletesavedata num: "&tv.clickedDeleteNum"
  -tv.system.load.fadeinTime = 100;
  ;jump label: "draw"
;else
  ;jump label: "unlock_load_buttons"
;end
;s


#==========================================
# ロード画面を終わる
#==========================================
*exit
;tempload num: 0, sound: false, toback: true
;trans method: "crossfade", time: "&tv.system.load.fadeoutTime"
;historyopt enabled: true
;rclick jump: false, call: false, enabled: true
;return

